@startuml
enum FallbackBehavior {
    UseProjectSettings,
    DontUseFallback,
    UseFallback,
}
enum MissingTranslationBehavior {
    ShowMissingTranslationMessage= 1,
    PrintWarning= 2,
}
enum AsynchronousBehaviour {
    Default,
    ForceSynchronous,
}
interface ITableProvider {
}
interface ITablePostprocessor {
}
abstract class "LocalizedDatabase`2"<TTable,TEntry> {
    + UseFallback : bool <<get>> <<set>>
    + LocalizedDatabase()
    + GetDefaultTableAsync() : AsyncOperationHandle<TTable>
    + <<virtual>> GetTableAsync(tableReference:TableReference, locale:Locale) : AsyncOperationHandle<TTable>
    + <<virtual>> GetTable(tableReference:TableReference, locale:Locale) : TTable
    + PreloadTables(tableReference:TableReference, locale:Locale) : AsyncOperationHandle
    + PreloadTables(tableReferences:IList<TableReference>, locale:Locale) : AsyncOperationHandle
    + ReleaseAllTables(locale:Locale) : void
    + ReleaseTable(tableReference:TableReference, locale:Locale) : void
    + <<virtual>> GetAllTables(locale:Locale) : AsyncOperationHandle<IList<TTable>>
    + <<virtual>> IsTableLoaded(tableReference:TableReference, locale:Locale) : bool
    + <<virtual>> GetTableEntryAsync(tableReference:TableReference, tableEntryReference:TableEntryReference, locale:Locale, fallbackBehavior:FallbackBehavior) : AsyncOperationHandle<TableEntryResult>
    + <<virtual>> GetTableEntry(tableReference:TableReference, tableEntryReference:TableEntryReference, locale:Locale, fallbackBehavior:FallbackBehavior) : TableEntryResult
    + <<virtual>> OnLocaleChanged(locale:Locale) : void
    + ResetState() : void
}
class "DetailedLocalizationTable`1"<T> {
}
struct TableEntryResult {
}
IPreloadRequired <|-- "LocalizedDatabase`2"
IReset <|-- "LocalizedDatabase`2"
IDisposable <|-- "LocalizedDatabase`2"
"LocalizedDatabase`2" --> "PreloadOperation" AsyncOperationHandle
"LocalizedDatabase`2" --> "DefaultTable" TableReference
"LocalizedDatabase`2" --> "TableProvider" ITableProvider
"LocalizedDatabase`2" --> "TablePostprocessor" ITablePostprocessor
"LocalizedDatabase`2" --> "AsynchronousBehaviour" AsynchronousBehaviour
"LocalizedDatabase`2" +-- TableEntryResult
TableEntryResult --> "Entry" TEntry
TableEntryResult --> "Table" TTable
@enduml
