@startuml
class xliff <<partial>> {
    + lang : string <<get>> <<set>>
}
class file <<partial>> {
    + original : string <<get>> <<set>>
    + sourcelanguage : string <<get>> <<set>>
    + datatype : string <<get>> <<set>>
    + toolid : string <<get>> <<set>>
    + dateSpecified : bool <<get>> <<set>>
    + space : string <<get>> <<set>>
    + category : string <<get>> <<set>>
    + targetlanguage : string <<get>> <<set>>
    + productname : string <<get>> <<set>>
    + productversion : string <<get>> <<set>>
    + buildnum : string <<get>> <<set>>
}
class header <<partial>> {
}
class ElemType_ExternalReference <<partial>> {
    + Item : object <<get>> <<set>>
}
class externalfile <<partial>> {
    + href : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + uid : string <<get>> <<set>>
}
class internalfile <<partial>> {
    + form : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + Value : string <<get>> <<set>>
}
class phasegroup <<partial>> {
}
class phase <<partial>> {
    + phasename : string <<get>> <<set>>
    + processname : string <<get>> <<set>>
    + companyname : string <<get>> <<set>>
    + toolid : string <<get>> <<set>>
    + dateSpecified : bool <<get>> <<set>>
    + jobid : string <<get>> <<set>>
    + contactname : string <<get>> <<set>>
    + contactemail : string <<get>> <<set>>
    + contactphone : string <<get>> <<set>>
}
class note <<partial>> {
    + note()
    + lang : string <<get>> <<set>>
    + priority : string <<get>> <<set>>
    + from : string <<get>> <<set>>
    + Value : string <<get>> <<set>>
}
enum AttrType_annotates {
    source,
    target,
    general,
}
class countgroup <<partial>> {
    + name : string <<get>> <<set>>
}
class count <<partial>> {
    + count()
    + counttype : string <<get>> <<set>>
    + phasename : string <<get>> <<set>>
    + unit : string <<get>> <<set>>
    + Value : string <<get>> <<set>>
}
class tool <<partial>> {
    + toolid : string <<get>> <<set>>
    + toolname : string <<get>> <<set>>
    + toolversion : string <<get>> <<set>>
    + toolcompany : string <<get>> <<set>>
}
enum ItemsChoiceType {
    countgroup,
    glossary,
    note,
    reference,
    tool,
}
class binunit <<partial>> {
    + binunit()
    + id : string <<get>> <<set>>
    + mimetype : string <<get>> <<set>>
    + approvedSpecified : bool <<get>> <<set>>
    + reformat : string <<get>> <<set>>
    + restype : string <<get>> <<set>>
    + resname : string <<get>> <<set>>
    + phasename : string <<get>> <<set>>
}
class binsource <<partial>> {
    + Item : object <<get>> <<set>>
}
class bintarget <<partial>> {
    + Item : object <<get>> <<set>>
    + mimetype : string <<get>> <<set>>
    + state : string <<get>> <<set>>
    + statequalifier : string <<get>> <<set>>
    + phasename : string <<get>> <<set>>
    + restype : string <<get>> <<set>>
    + resname : string <<get>> <<set>>
}
class contextgroup <<partial>> {
    + name : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + purpose : string <<get>> <<set>>
}
class context <<partial>> {
    + context()
    + contexttype : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + Value : string <<get>> <<set>>
}
enum AttrType_YesNo {
    yes,
    no,
}
class transunit <<partial>> {
    + transunit()
    + id : string <<get>> <<set>>
    + approvedSpecified : bool <<get>> <<set>>
    + reformat : string <<get>> <<set>>
    + space : string <<get>> <<set>>
    + datatype : string <<get>> <<set>>
    + phasename : string <<get>> <<set>>
    + restype : string <<get>> <<set>>
    + resname : string <<get>> <<set>>
    + extradata : string <<get>> <<set>>
    + extype : string <<get>> <<set>>
    + helpid : string <<get>> <<set>>
    + menu : string <<get>> <<set>>
    + menuoption : string <<get>> <<set>>
    + menuname : string <<get>> <<set>>
    + coord : string <<get>> <<set>>
    + font : string <<get>> <<set>>
    + cssstyle : string <<get>> <<set>>
    + style : string <<get>> <<set>>
    + exstyle : string <<get>> <<set>>
    + sizeunit : string <<get>> <<set>>
    + maxwidth : string <<get>> <<set>>
    + minwidth : string <<get>> <<set>>
    + maxheight : string <<get>> <<set>>
    + minheight : string <<get>> <<set>>
    + maxbytes : string <<get>> <<set>>
    + minbytes : string <<get>> <<set>>
    + charclass : string <<get>> <<set>>
}
class source <<partial>> {
    + lang : string <<get>> <<set>>
}
class bpt <<partial>> {
    + rid : string <<get>> <<set>>
    + ctype : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
class sub <<partial>> {
    + datatype : string <<get>> <<set>>
    + ctype : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
}
class bx <<partial>> {
    + bx()
    + rid : string <<get>> <<set>>
    + ctype : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
class ept <<partial>> {
    + rid : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
class ex <<partial>> {
    + rid : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
class g <<partial>> {
    + g()
    + ctype : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
class it <<partial>> {
    + rid : string <<get>> <<set>>
    + ctype : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
enum AttrType_Position {
    open,
    close,
}
class mrk <<partial>> {
    + mtype : string <<get>> <<set>>
    + mid : string <<get>> <<set>>
    + comment : string <<get>> <<set>>
}
class ph <<partial>> {
    + ctype : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + assocSpecified : bool <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
enum AttrType_assoc {
    preceding,
    following,
    both,
}
class x <<partial>> {
    + x()
    + ctype : string <<get>> <<set>>
    + id : string <<get>> <<set>>
    + xid : string <<get>> <<set>>
    + equivtext : string <<get>> <<set>>
}
class segsource <<partial>> {
    + lang : string <<get>> <<set>>
}
class target <<partial>> {
    + target()
    + state : string <<get>> <<set>>
    + statequalifier : string <<get>> <<set>>
    + phasename : string <<get>> <<set>>
    + lang : string <<get>> <<set>>
    + resname : string <<get>> <<set>>
    + coord : string <<get>> <<set>>
    + font : string <<get>> <<set>>
    + cssstyle : string <<get>> <<set>>
    + style : string <<get>> <<set>>
    + exstyle : string <<get>> <<set>>
}
class alttrans <<partial>> {
    + alttrans()
    + matchquality : string <<get>> <<set>>
    + toolid : string <<get>> <<set>>
    + crc : string <<get>> <<set>>
    + lang : string <<get>> <<set>>
    + origin : string <<get>> <<set>>
    + datatype : string <<get>> <<set>>
    + space : string <<get>> <<set>>
    + restype : string <<get>> <<set>>
    + resname : string <<get>> <<set>>
    + extradata : string <<get>> <<set>>
    + extype : string <<get>> <<set>>
    + helpid : string <<get>> <<set>>
    + menu : string <<get>> <<set>>
    + menuoption : string <<get>> <<set>>
    + menuname : string <<get>> <<set>>
    + mid : string <<get>> <<set>>
    + coord : string <<get>> <<set>>
    + font : string <<get>> <<set>>
    + cssstyle : string <<get>> <<set>>
    + style : string <<get>> <<set>>
    + exstyle : string <<get>> <<set>>
    + phasename : string <<get>> <<set>>
    + alttranstype : string <<get>> <<set>>
}
class group <<partial>> {
    + group()
    + id : string <<get>> <<set>>
    + datatype : string <<get>> <<set>>
    + space : string <<get>> <<set>>
    + restype : string <<get>> <<set>>
    + resname : string <<get>> <<set>>
    + extradata : string <<get>> <<set>>
    + extype : string <<get>> <<set>>
    + helpid : string <<get>> <<set>>
    + menu : string <<get>> <<set>>
    + menuoption : string <<get>> <<set>>
    + menuname : string <<get>> <<set>>
    + coord : string <<get>> <<set>>
    + font : string <<get>> <<set>>
    + cssstyle : string <<get>> <<set>>
    + style : string <<get>> <<set>>
    + exstyle : string <<get>> <<set>>
    + reformat : string <<get>> <<set>>
    + sizeunit : string <<get>> <<set>>
    + maxwidth : string <<get>> <<set>>
    + minwidth : string <<get>> <<set>>
    + maxheight : string <<get>> <<set>>
    + minheight : string <<get>> <<set>>
    + maxbytes : string <<get>> <<set>>
    + minbytes : string <<get>> <<set>>
    + charclass : string <<get>> <<set>>
}
enum AttrType_Version {
    Item12,
    Item11,
    Item10,
}
class body <<partial>> {
}
class "List`1"<T> {
}
xliff --> "file<file>" "List`1"
xliff --> "version" AttrType_Version
file --> "header" header
file --> "body<object>" "List`1"
header --> "skl" ElemType_ExternalReference
header --> "phasegroup" phasegroup
note --> "annotates" AttrType_annotates
binunit --> "binsource" binsource
binunit --> "bintarget" bintarget
binunit --> "approved" AttrType_YesNo
binunit --> "translate" AttrType_YesNo
context --> "matchmandatory" AttrType_YesNo
transunit --> "source" source
transunit --> "segsource" segsource
transunit --> "target" target
transunit --> "Items<object>" "List`1"
transunit --> "approved" AttrType_YesNo
transunit --> "translate" AttrType_YesNo
transunit --> "mergedtrans" AttrType_YesNo
bx --> "clone" AttrType_YesNo
g --> "clone" AttrType_YesNo
it --> "pos" AttrType_Position
ph --> "assoc" AttrType_assoc
x --> "clone" AttrType_YesNo
target --> "equivtrans" AttrType_YesNo
alttrans --> "source" source
alttrans --> "segsource" segsource
alttrans --> "target" target
group --> "note<note>" "List`1"
group --> "Items<object>" "List`1"
group --> "translate" AttrType_YesNo
group --> "mergedtrans" AttrType_YesNo
@enduml
