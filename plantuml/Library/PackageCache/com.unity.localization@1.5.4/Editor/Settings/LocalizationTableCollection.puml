@startuml
abstract class LocalizationTableCollection {
    + {abstract} RemoveEntry(entryReference:TableEntryReference) : void
    + <<virtual>> TableCollectionName : string <<get>> <<set>>
    + Group : string <<get>> <<set>>
    + SetTableCollectionName(name:string, createUndo:bool) : void
    + <<virtual>> SetPreloadTableFlag(preload:bool, createUndo:bool) : void
    + <<virtual>> IsPreloadTableFlagSet() : bool
    + <<virtual>> AddTable(table:LocalizationTable, createUndo:bool, postEvent:bool) : void
    + <<virtual>> AddNewTable(localeIdentifier:LocaleIdentifier) : LocalizationTable
    + <<virtual>> AddNewTable(localeIdentifier:LocaleIdentifier, path:string) : LocalizationTable
    + <<virtual>> RemoveTable(table:LocalizationTable, createUndo:bool, postEvent:bool) : void
    + <<virtual>> ClearAllEntries() : void
    + <<virtual>> GetTable(localeIdentifier:LocaleIdentifier) : LocalizationTable
    + RefreshAddressables(createUndo:bool) : void
    + <<virtual>> ContainsTable(table:LocalizationTable) : bool
    + ContainsTable(localeIdentifier:LocaleIdentifier) : bool
    + AddExtension(extension:CollectionExtension) : void
    + RemoveExtension(extension:CollectionExtension) : void
    + OnBeforeSerialize() : void
    + OnAfterDeserialize() : void
    + <<override>> ToString() : string
}
class "Row`1"<TEntry> {
}
class "ReadOnlyCollection`1"<T> {
}
ScriptableObject <|-- LocalizationTableCollection
ISerializationCallbackReceiver <|-- LocalizationTableCollection
LocalizationTableCollection --> "Tables<LazyLoadReference<LocalizationTable>>" "ReadOnlyCollection`1"
LocalizationTableCollection --> "Extensions<CollectionExtension>" "ReadOnlyCollection`1"
LocalizationTableCollection --> "TableCollectionNameReference" TableReference
LocalizationTableCollection --> "SharedData" SharedTableData
LocalizationTableCollection +-- "Row`1"
@enduml
