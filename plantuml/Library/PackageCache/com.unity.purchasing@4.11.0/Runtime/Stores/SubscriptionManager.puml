@startuml
class TimeSpanUnits {
    + days : double
    + months : int
    + years : int
    + TimeSpanUnits(d:double, m:int, y:int)
}
class SubscriptionManager {
    + {static} UpdateSubscription(newProduct:Product, oldProduct:Product, developerPayload:string, appleStore:Action<Product, string>, googleStore:Action<string, string>) : void
    + {static} UpdateSubscriptionInGooglePlayStore(oldProduct:Product, newProduct:Product, googlePlayUpdateCallback:Action<string, string>) : void
    + {static} UpdateSubscriptionInAppleStore(newProduct:Product, developerPayload:string, appleStoreUpdateCallback:Action<Product, string>) : void
    + SubscriptionManager(product:Product, intro_json:string)
    + SubscriptionManager(receipt:string, id:string, intro_json:string)
    + getSubscriptionInfo() : SubscriptionInfo
}
class SubscriptionInfo {
    + SubscriptionInfo(r:AppleInAppPurchaseReceipt, intro_json:string)
    + SubscriptionInfo(skuDetails:string, isAutoRenewing:bool, purchaseDate:DateTime, isFreeTrial:bool, hasIntroductoryPriceTrial:bool, purchaseHistorySupported:bool, updateMetadata:string)
    + SubscriptionInfo(productId:string)
    + getProductId() : string
    + getPurchaseDate() : DateTime
    + isSubscribed() : Result
    + isExpired() : Result
    + isCancelled() : Result
    + isFreeTrial() : Result
    + isAutoRenewing() : Result
    + getRemainingTime() : TimeSpan
    + isIntroductoryPricePeriod() : Result
    + getIntroductoryPricePeriod() : TimeSpan
    + getIntroductoryPrice() : string
    + getIntroductoryPricePeriodCycles() : long
    + getExpireDate() : DateTime
    + getCancelDate() : DateTime
    + getFreeTrialPeriod() : TimeSpan
    + getSubscriptionPeriod() : TimeSpan
    + getFreeTrialPeriodString() : string
    + getSkuDetails() : string
    + getSubscriptionInfoJsonString() : string
}
enum Result {
    True,
    False,
    Unsupported,
}
enum SubscriptionPeriodUnit {
    Day= 0,
    Month= 1,
    Week= 2,
    Year= 3,
    NotAvailable= 4,
}
enum AppleStoreProductType {
    NonConsumable= 0,
    Consumable= 1,
    NonRenewingSubscription= 2,
    AutoRenewingSubscription= 3,
}
class ReceiptParserException {
    + ReceiptParserException()
    + ReceiptParserException(message:string)
}
class InvalidProductTypeException {
}
class NullProductIdException {
}
class NullReceiptException {
}
class StoreSubscriptionInfoNotSupportedException {
    + StoreSubscriptionInfoNotSupportedException(message:string)
}
Exception <|-- ReceiptParserException
ReceiptParserException <|-- InvalidProductTypeException
ReceiptParserException <|-- NullProductIdException
ReceiptParserException <|-- NullReceiptException
ReceiptParserException <|-- StoreSubscriptionInfoNotSupportedException
@enduml
