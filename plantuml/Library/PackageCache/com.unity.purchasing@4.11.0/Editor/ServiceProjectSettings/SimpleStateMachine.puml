@startuml
class "SimpleStateMachine`1"<T> {
    + Initialize(initialState:State) : void
    + ClearCurrentState() : void
    + AddEvent(simpleStateMachineEvent:T) : void
    + EventExists(simpleStateMachineEvent:T) : bool
    + GetEvents() : List<T>
    + AddState(state:State) : void
    + GetStateByName(stateName:string) : State
    + StateExists(state:State) : bool
    + GetStates() : List<State>
    + ProcessEvent(simpleStateMachineEvent:T) : void
}
class State {
    + name : string <<get>>
    + State(name:string, simpleStateMachine:SimpleStateMachine<T>)
    + <<virtual>> ActionExistsForEvent(simpleStateMachineEvent:T) : bool
    + <<virtual>> ModifyActionForEvent(simpleStateMachineEvent:T, transitionAction:Func<T, State>) : void
    + <<virtual>> GetActionForEvent(simpleStateMachineEvent:T) : Func<T, State>
    + <<virtual>> EnterState() : void
}
class ActionForEvent {
}
"SimpleStateMachine`1" --> "currentState" State
"SimpleStateMachine`1" +-- State
State +-- ActionForEvent
@enduml
