@startuml
class BuildCallbacks {
    + PostScripts(parameters:IBuildParameters, results:IBuildResults) : ReturnCode
    + PostDependency(buildParameters:IBuildParameters, dependencyData:IDependencyData) : ReturnCode
    + PostPacking(buildParameters:IBuildParameters, dependencyData:IDependencyData, writeData:IWriteData) : ReturnCode
    + PostWriting(parameters:IBuildParameters, dependencyData:IDependencyData, writeData:IWriteData, results:IBuildResults) : ReturnCode
}
class "Func`3"<T1,T2,T3> {
}
class "Func`4"<T1,T2,T3,T4> {
}
class "Func`5"<T1,T2,T3,T4,T5> {
}
IDependencyCallback <|-- BuildCallbacks
IPackingCallback <|-- BuildCallbacks
IWritingCallback <|-- BuildCallbacks
IScriptsCallback <|-- BuildCallbacks
BuildCallbacks --> "PostScriptsCallbacks<IBuildParameters,IBuildResults,ReturnCode>" "Func`3"
BuildCallbacks --> "PostDependencyCallback<IBuildParameters,IDependencyData,ReturnCode>" "Func`3"
BuildCallbacks --> "PostPackingCallback<IBuildParameters,IDependencyData,IWriteData,ReturnCode>" "Func`4"
BuildCallbacks --> "PostWritingCallback<IBuildParameters,IDependencyData,IWriteData,IBuildResults,ReturnCode>" "Func`5"
@enduml
