@startuml
class ScriptableBuildPipelineTests {
    + Setup() : void
    + Cleanup() : void
    + BuildPipeline_AssetBundleBuild_DoesNotResetUnsavedScene() : IEnumerator
    + BuildPipeline_AssetBundleBuild_WritesLinkXMLFile() : void
    + BuildPipeline_CompatibilityBuildPipeline_WritesManifest() : void
    + ValidationMethods_HasDirtyScenes() : IEnumerator
    + DefaultBuildTasks_WriteSerializedFiles() : void
    + DefaultBuildTasks_GenerateBundlePacking() : void
    + DefaultBuildTasks_GenerateBundleCommands() : void
    + DefaultBuildTasks_GenerateBundleMaps() : void
    + DefaultBuildTasks_PostPackingCallback() : void
    + DefaultBuildTasks_PostWritingCallback() : void
    + DefaultBuildTasks_PostDependencyCallback() : void
    + DefaultBuildTasks_PostScriptsCallbacks() : void
    + DefaultBuildTasks_AppendBundleHash() : void
    + SceneDataWriteOperation_HashChanges_WhenPrefabDepenencyChanges() : IEnumerator
    + SceneBundleWriteOperation_HashChanges_WhenPrefabDepenencyChanges() : IEnumerator
    + BuildAssetBundles_WhenNoBuildInContextLog_CreatesPerformanceLogReport() : void
    + BuildAssetBundles_WhenBuildLogProvided_DoesNotCreatePerformanceLogReport() : void
    + BuildParameters_SetsBuildCacheServerParameters_WhenUseBuildCacheServerEnabled() : void
    + BuildParameters_DoesNotSetBuildCacheServerParameters_WhenUseBuildCacheServerDisabled() : void
    + BuildAssetBundles_WithCache_Succeeds() : void
    + BuildAssetBundles_WithoutCache_Succeeds() : void
    + PreferencesProperties_ChangesSerializeToDisk() : void
}
class StoreCacheServerConfig {
    + StoreCacheServerConfig(useCacheServer:bool, host:string, port:int)
    + Dispose() : void
}
ScriptableBuildPipelineTests +-- StoreCacheServerConfig
IDisposable <|-- StoreCacheServerConfig
@enduml
