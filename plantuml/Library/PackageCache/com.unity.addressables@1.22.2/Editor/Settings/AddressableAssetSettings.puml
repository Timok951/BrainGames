@startuml
class AddressableAssetSettings {
    + <<const>> kBuildPath : string = "BuildPath"
    + <<const>> kLoadPath : string = "LoadPath"
    + <<const>> kNewGroupName : string = "New Group"
    + <<const>> kLocalBuildPath : string = "Local.BuildPath"
    + <<const>> kLocalLoadPath : string = "Local.LoadPath"
    + <<const>> kRemoteBuildPath : string = "Remote.BuildPath"
    + <<const>> kRemoteLoadPath : string = "Remote.LoadPath"
    + <<const>> kLocalBuildPathValue : string = "[UnityEngine.AddressableAssets.Addressables.BuildPath]/[BuildTarget]"
    + <<const>> kLocalLoadPathValue : string = "{UnityEngine.AddressableAssets.Addressables.RuntimePath&#125;/[BuildTarget]"
    + <<const>> kRemoteBuildPathValue : string = "ServerData/[BuildTarget]"
    + <<const>> kRemoteLoadPathValue : string = "http://localhost/[BuildTarget]"
    + AssetPath : string <<get>>
    + ConfigFolder : string <<get>>
    + GroupFolder : string <<get>>
    + DataBuilderFolder : string <<get>>
    + GroupSchemaFolder : string <<get>>
    + GroupTemplateFolder : string <<get>>
    + {static}  <<event>> OnModificationGlobal : Action<AddressableAssetSettings, ModificationEvent, object> 
    + IsPersisted : bool <<get>>
    + CatalogRequestsTimeout : int <<get>> <<set>>
    + MaxConcurrentWebRequests : int <<get>> <<set>>
    + UniqueBundleIds : bool <<get>> <<set>>
    + ContiguousBundles : bool <<get>> <<set>>
    + NonRecursiveBuilding : bool <<get>> <<set>>
    + OptimizeCatalogSize : bool <<get>> <<set>>
    + BuildRemoteCatalog : bool <<get>> <<set>>
    + BundleLocalCatalog : bool <<get>> <<set>>
    + DisableCatalogUpdateOnStartup : bool <<get>> <<set>>
    + DisableVisibleSubAssetRepresentations : bool <<get>> <<set>>
    + IgnoreUnsupportedFilesInBuild : bool <<get>> <<set>>
    + ShaderBundleCustomNaming : string <<get>> <<set>>
    + MonoScriptBundleCustomNaming : string <<get>> <<set>>
    + ContentStateBuildPath : string <<get>> <<set>>
    + CreateAssetReference(guid:string) : AssetReference
    + OverridePlayerVersion : string <<get>> <<set>>
    + PlayerBuildVersion : string <<get>>
    + RemoveSchemaTemplate(index:int, postEvent:bool) : bool
    + GetGroupTemplateObject(index:int) : IGroupTemplate
    + AddGroupTemplateObject(templateObject:IGroupTemplate, postEvent:bool) : bool
    + RemoveGroupTemplateObject(index:int, postEvent:bool) : bool
    + SetGroupTemplateObjectAtIndex(index:int, templateObject:IGroupTemplate, postEvent:bool) : bool
    + GetInitializationObject(index:int) : IObjectInitializationDataProvider
    + AddInitializationObject(initObject:IObjectInitializationDataProvider, postEvent:bool) : bool
    + RemoveInitializationObject(index:int, postEvent:bool) : bool
    + SetInitializationObjectAtIndex(index:int, initObject:IObjectInitializationDataProvider, postEvent:bool) : bool
    + GetDataBuilder(index:int) : IDataBuilder
    + AddDataBuilder(builder:IDataBuilder, postEvent:bool) : bool
    + RemoveDataBuilder(index:int, postEvent:bool) : bool
    + SetDataBuilderAtIndex(index:int, builder:IDataBuilder, postEvent:bool) : bool
    + ActivePlayerDataBuilderIndex : int <<get>> <<set>>
    + ActivePlayModeDataBuilderIndex : int <<get>> <<set>>
    + GetLabels() : List<string>
    + AddLabel(label:string, postEvent:bool) : void
    + RemoveLabel(label:string, postEvent:bool) : void
    + activeProfileId : string <<get>> <<set>>
    + GetAllAssets(assets:List<AddressableAssetEntry>, includeSubObjects:bool, groupFilter:Func<AddressableAssetGroup, bool>, entryFilter:Func<AddressableAssetEntry, bool>) : void
    + RemoveAssetEntry(guid:string, postEvent:bool) : bool
    + <<const>> PlayerDataGroupName : string = "Built In Data"
    + <<const>> DefaultLocalGroupName : string = "Default Local Group"
    + {static} Create(configFolder:string, configName:string, createDefaultGroups:bool, isPersisted:bool) : AddressableAssetSettings
    + CreateAndAddGroupTemplate(displayName:string, description:string, types:Type[]) : bool
    + FindGroup(func:Func<AddressableAssetGroup, bool>) : AddressableAssetGroup
    + FindGroup(groupName:string) : AddressableAssetGroup
    + SetDirty(modificationEvent:ModificationEvent, eventData:object, postEvent:bool, settingsModified:bool) : void
    + FindAssetEntry(guid:string) : AddressableAssetEntry
    + FindAssetEntry(guid:string, includeImplicit:bool) : AddressableAssetEntry
    + MoveEntries(entries:List<AddressableAssetEntry>, targetParent:AddressableAssetGroup, readOnly:bool, postEvent:bool) : void
    + MoveEntry(entry:AddressableAssetEntry, targetParent:AddressableAssetGroup, readOnly:bool, postEvent:bool) : void
    + CreateOrMoveEntry(guid:string, targetParent:AddressableAssetGroup, readOnly:bool, postEvent:bool) : AddressableAssetEntry
    + CreateGroup(groupName:string, setAsDefaultGroup:bool, readOnly:bool, postEvent:bool, schemasToCopy:List<AddressableAssetGroupSchema>, types:Type[]) : AddressableAssetGroup
    + RemoveGroup(g:AddressableAssetGroup) : void
    + {static} BuildPlayerContent() : void
    + {static} BuildPlayerContent(result:AddressablesPlayerBuildResult) : void
    + {static} CleanPlayerContent(builder:IDataBuilder) : void
    + {static} RegisterCustomAssetEntryCommand(cmdId:string, cmdFunc:Action<IEnumerable<AddressableAssetEntry>>) : bool
    + {static} UnregisterCustomAssetEntryCommand(cmdId:string) : bool
    + {static} InvokeAssetEntryCommand(cmdId:string, entries:IEnumerable<AddressableAssetEntry>) : bool
    + {static} RegisterCustomAssetGroupCommand(cmdId:string, cmdFunc:Action<IEnumerable<AddressableAssetGroup>>) : bool
    + {static} UnregisterCustomAssetGroupCommand(cmdId:string) : bool
    + {static} InvokeAssetGroupCommand(cmdId:string, groups:IEnumerable<AddressableAssetGroup>) : bool
    + OnBeforeSerialize() : void
    + OnAfterDeserialize() : void
}
class "Cache`2"<T1,T2> {
    + Cache(settings:AddressableAssetSettings)
    + TryGetCached(key:T1, result:T2) : bool
    + Add(key:T1, value:T2) : void
    + Remove(key:T1) : void
}
enum PlayerBuildOption {
    PreferencesValue,
    BuildWithPlayer,
    DoNotBuildWithPlayer,
}
enum ModificationEvent {
    GroupAdded,
    GroupRemoved,
    GroupRenamed,
    GroupSchemaAdded,
    GroupSchemaRemoved,
    GroupSchemaModified,
    GroupTemplateAdded,
    GroupTemplateRemoved,
    GroupTemplateSchemaAdded,
    GroupTemplateSchemaRemoved,
    EntryCreated,
    EntryAdded,
    EntryMoved,
    EntryRemoved,
    LabelAdded,
    LabelRemoved,
    ProfileAdded,
    ProfileRemoved,
    ProfileModified,
    ActiveProfileSet,
    EntryModified,
    BuildSettingsChanged,
    ActiveBuildScriptChanged,
    DataBuilderAdded,
    DataBuilderRemoved,
    InitializationObjectAdded,
    InitializationObjectRemoved,
    ActivePlayModeScriptChanged,
    BatchModification,
    HostingServicesManagerModified,
    GroupMoved,
    CertificateHandlerChanged,
}
class "Action`3"<T1,T2,T3> {
}
class "List`1"<T> {
}
class "IEnumerable`1"<T> {
}
ScriptableObject <|-- AddressableAssetSettings
ISerializationCallbackReceiver <|-- AddressableAssetSettings
AddressableAssetSettings --> "OnModification<AddressableAssetSettings,ModificationEvent,object>" "Action`3"
AddressableAssetSettings --> "OnDataBuilderComplete<AddressableAssetSettings,IDataBuilder,IDataBuilderResult>" "Action`3"
AddressableAssetSettings --> "ShaderBundleNaming" ShaderBundleNaming
AddressableAssetSettings --> "MonoScriptBundleNaming" MonoScriptBundleNaming
AddressableAssetSettings --> "CheckForContentUpdateRestrictionsOption" CheckForContentUpdateRestrictionsOptions
AddressableAssetSettings --> "RemoteCatalogBuildPath" ProfileValueReference
AddressableAssetSettings --> "RemoteCatalogLoadPath" ProfileValueReference
AddressableAssetSettings --> "BuildAddressablesWithPlayerBuild" PlayerBuildOption
AddressableAssetSettings --> "currentHash" Hash128
AddressableAssetSettings --> "groups<AddressableAssetGroup>" "List`1"
AddressableAssetSettings --> "buildSettings" AddressableAssetBuildSettings
AddressableAssetSettings --> "profileSettings" AddressableAssetProfileSettings
AddressableAssetSettings --> "GroupTemplateObjects<ScriptableObject>" "List`1"
AddressableAssetSettings --> "InitializationObjects<ScriptableObject>" "List`1"
AddressableAssetSettings --> "CertificateHandlerType" Type
AddressableAssetSettings --> "DataBuilders<ScriptableObject>" "List`1"
AddressableAssetSettings --> "ActivePlayerDataBuilder" IDataBuilder
AddressableAssetSettings --> "ActivePlayModeDataBuilder" IDataBuilder
AddressableAssetSettings --> "HostingServicesManager" HostingServicesManager
AddressableAssetSettings --> "DefaultGroup" AddressableAssetGroup
AddressableAssetSettings --> "CustomAssetEntryCommands<string>" "IEnumerable`1"
AddressableAssetSettings --> "CustomAssetGroupCommands<string>" "IEnumerable`1"
AddressableAssetSettings +-- "Cache`2"
AddressableAssetSettings +-- PlayerBuildOption
AddressableAssetSettings +-- ModificationEvent
@enduml
