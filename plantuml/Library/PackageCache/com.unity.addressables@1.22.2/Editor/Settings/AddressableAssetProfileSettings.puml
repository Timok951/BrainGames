@startuml
class AddressableAssetProfileSettings {
    + <<const>> customEntryString : string = "<custom>"
    + <<const>> defaultSettingsPathString : string = "<default settings path>"
    + <<const>> undefinedEntryValue : string = "<undefined>"
    + GetProfileDataById(id:string) : ProfileIdData
    + GetProfileDataByName(name:string) : ProfileIdData
    + Reset() : string
    + EvaluateString(profileId:string, varString:string) : string
    + GetVariableNames() : List<string>
    + GetAllProfileNames() : List<string>
    + GetProfileName(profileId:string) : string
    + GetProfileId(profileName:string) : string
    + GetAllVariableIds() : HashSet<string>
    + SetDirty(modificationEvent:AddressableAssetSettings.ModificationEvent, eventData:object, postEvent:bool) : void
    + AddProfile(name:string, copyFromId:string) : string
    + RenameProfile(profileId:string, newName:string) : bool
    + RemoveProfile(profileId:string) : void
    + SetValue(profileId:string, variableName:string, val:string) : void
    + CreateValue(variableName:string, defaultValue:string) : string
    + RemoveValue(variableId:string) : void
    + GetValueById(profileId:string, varId:string) : string
    + GetValueByName(profileId:string, varName:string) : string
    + OnBeforeSerialize() : void
    + OnAfterDeserialize() : void
}
class BuildProfile {
    + inheritedParent : string <<get>> <<set>>
    + OnBeforeSerialize() : void
    + OnAfterDeserialize() : void
}
class ProfileIdData {
    + Id : string <<get>>
    + ProfileName : string <<get>>
    + SetName(newName:string, profileSettings:AddressableAssetProfileSettings) : void
    + ProfileIdData(entryId:string, entryName:string, inline:bool)
}
class ProfileEntry {
    + id : string <<get>> <<set>>
    + value : string <<get>> <<set>>
}
ISerializationCallbackReceiver <|-- AddressableAssetProfileSettings
AddressableAssetProfileSettings +-- BuildProfile
ISerializationCallbackReceiver <|-- BuildProfile
AddressableAssetProfileSettings +-- ProfileIdData
BuildProfile +-- ProfileEntry
@enduml
