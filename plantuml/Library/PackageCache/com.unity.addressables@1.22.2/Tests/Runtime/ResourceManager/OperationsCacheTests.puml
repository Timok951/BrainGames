@startuml
class OperationsCacheTests {
    + Setup() : void
    + TearDown() : void
    + OperationCache_CollisionsAreProperlyHandled() : void
    + Locations_WithDiffNames_LocationEquals_Returns_True() : void
    + Locations_WithDiffIds_LocationEquals_Returns_False() : void
    + Locations_WithDiffProvider_LocationEquals_Returns_False() : void
    + Locations_WithDiffResourceTypes_LocationEquals_Returns_True() : void
    + Locations_WithDiffTypes_LocationEquals_Returns_True() : void
}
class TestOperation {
}
class TestResourceLocation {
    + TestResourceLocation(name:string, id:string, providerId:string, t:Type, dependencies:IResourceLocation[])
    + InternalId : string <<get>>
    + ProviderId : string <<get>>
    + Hash(type:Type) : int
    + DependencyHashCode : int <<get>>
    + HasDependencies : bool <<get>>
    + Data : object <<get>>
    + PrimaryKey : string <<get>>
}
class ResourceLocatonTestSub {
    + ResourceLocatonTestSub(n:string, id:string, pr:string, t:Type)
}
class "AsyncOperationBase`1"<T> {
}
class "IList`1"<T> {
}
OperationsCacheTests +-- TestOperation
"AsyncOperationBase`1" "<GameObject>" <|-- TestOperation
ICachable <|-- TestOperation
TestOperation --> "Key" IOperationCacheKey
OperationsCacheTests +-- TestResourceLocation
IResourceLocation <|-- TestResourceLocation
TestResourceLocation --> "Dependencies<IResourceLocation>" "IList`1"
TestResourceLocation --> "ResourceType" Type
OperationsCacheTests +-- ResourceLocatonTestSub
ResourceLocationBase <|-- ResourceLocatonTestSub
@enduml
