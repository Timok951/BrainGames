@startuml
class ContentUpdateTests {
    + CanCreateContentStateData() : void
    + ContentState_WithDisabledGroups_DoesNotInclude_EntriesFromGroup() : void
    + CreateCustomLocator_ReturnsLocatorWithUniqueId() : void
    + DownloadBinFileToTempLocation_DoesNotThrowError_WhenDownloadFails() : void
    + PrepareContentUpdate() : void
    + GatherModifiedEntries_WhenDependencyBundleNameIsSame_DependencyIsNotFlaggedAsModified() : void
    + GatherModifiedEntries_WhenDependencyBundleNameIsChanged_DependencyIsFlaggedAsModified() : void
    + GetStaticContentDependenciesOfModifiedEntries_FlagsEntryDependencies_WithStaticContentEnabled() : void
    + GetStaticContentDependenciesOfModifiedEntries_DoesNotFlagEntryDependencies_WithStaticContentDisabled() : void
    + GetStaticContentDependenciesOfModifiedEntries_WhenFolderHasModifiedImplicitAsset_DependenciesFlaggedAsModified() : void
    + WhenContentUpdated_NewCatalogRetains_OldCatalogBundleLoadData() : void
    + IsCacheDataValid_WhenNoPreviousRemoteCatalogPath_ReturnsFalseWithError() : void
    + IsCacheDataValid_WhenRemoteCatalogDisabled_ReturnsFalseWithError() : void
    + IsCacheDataValid_WhenMismatchedCatalogPaths_ReturnsFalseWithError() : void
    + IsCacheDataValid_WhenMismatchedEditorVersions_LogsWarning() : void
    + BuildContentUpdate_DoesNotDeleteBuiltData() : void
    + ContentUpdateScenes_PackedTogether_MarksAllScenesModified() : void
    + ContentUpdateScenes_PackedTogetherByLabel_MarksAllScenesModifiedWithSharedLabel() : void
    + ContentUpdateScenes_PackedSeperately_MarksNoAdditionalScenes() : void
    + DetermineRequiredAssetEntryUpdates_AssetWithoutDependenciesAndChangedHashInStaticGroup_ReturnsOnlyRevertToCachedState() : void
    + DetermineRequiredAssetEntryUpdates_AssetWithDependenciesAndChangedHashInStaticGroup_ReturnsRevertToCachedStateAndDependencies() : void
    + DetermineRequiredAssetEntryUpdates_AssetWithChangedGroup_TakesNoAction() : void
    + DetermineRequiredAssetEntryUpdates_AssetWithChangedHashInNonStaticGroup_TakesNoAction() : void
    + DetermineRequiredAssetEntryUpdates_EntriesThatTakeNoAction_StillSetBundleFileId() : void
    + DetermineRequiredAssetEntryUpdates_WithMissingBundleFileId_LogsErrorAndTakesNoAction() : void
    + DetermineRequiredAssetEntryUpdates_WithMissingPreviousBundle_LogsWarningAndReturnsRevertOperation() : void
    + DetermineRequiredAssetEntryUpdates_WithIdenticalBundleId_LogsWarningAndReturnsRevertOperation() : void
    + DetermineRequiredAssetEntryUpdates_AssetWithMatchingCachedInternalBundleId_TakesNoAction() : void
    + ApplyAssetEntryUpdates_InvalidKeyForGuidToPreviousAssetStateMap_DoesNotThrow() : void
    + ApplyAssetEntryUpdates_DeletesCorrectBundle() : void
    + ApplyAssetEntryUpdates_RegistryOnlyContainsCachedBundleEntry() : void
    + ApplyAssetEntryUpdates_WhenAssetAndDependencyAreModifiedAndInSeparateGroups_SetCatalogEntryToCachedBundles() : void
    + RevertBundleDataCorrectlyReplacesToCacheLoadingData() : void
    + RevertBundleFails_WhenBundleMissingFromCacheButInCatalog() : void
    + RevertBundleSucceeds_WhenBundleMissingFromCatalogButInCache() : void
    + RevertBundleSucceeds_WhenBundleMissingFromCacheAndCatalog() : void
    + BundleIdToBuildPath_ReturnsBundleBuildPath(bundleId:string, rootLoadPath:string, rootBuildPath:string) : void
    + GatherModifiedEntries_IncludesDependants() : void
}
AddressableAssetTestBase <|-- ContentUpdateTests
@enduml
