@startuml
class BuildScriptPackedTests {
    + ShaderBundleNaming_GeneratesCorrectShaderBundlePrefix(shaderBundleNaming:ShaderBundleNaming, customName:string) : void
    + MonoScriptBundleNaming_GeneratesCorrectMonoScriptBundlePrefix(monoScriptBundleNaming:MonoScriptBundleNaming, customName:string) : void
    + SettingsWithMaxConcurrentWebRequests_InitializeBuildContext_SetsMaxConcurrentWebRequestsInRuntimeData() : void
    + SettingsWithCatalogTimeout_InitializeBuildContext_SetsCatalogTimeoutInRuntimeData() : void
    + PackedModeScript_CannotBuildPlayContent() : void
    + WarningIsLogged_WhenAddressableGroupDoesNotContainSchema() : void
    + GlobalSharedBundles_BuiltWithCorrectName(monoScriptBundleNaming:MonoScriptBundleNaming, shaderNaming:ShaderBundleNaming, customName:string) : void
    + CatalogBuiltWithDifferentGroupOrder_AreEqualWhenOrderEnabled() : void
    + SetAssetEntriesBundleFileIdToCatalogEntryBundleFileId_ModifiedOnlyAssetEntries_ThatAreIncludedInBuildWriteData() : void
    + SetAssetEntriesBundleFileIdToCatalogEntryBundleFileId_SetsBundleFileIdToBundleNameOnly_WhenGroupSchemaNamingIsSetToFilename() : void
    + AddPostCatalogUpdates_AddsCallbackToUpdateBundleLocation_WhenNamingSchemaIsSetToFilenameOnly() : void
    + AddPostCatalogUpdatesInternal_DoesNotAttemptToRemoveHashUnnecessarily() : void
    + ErrorCheckBundleSettings_FindsNoProblemsInDefaultScema() : void
    + ErrorCheckBundleSettings_WarnsOfMismatchedBuildPath() : void
    + ErrorCheckBundleSettings_WarnsOfMismatchedLoadPath() : void
    + WhenUsingLocalContentAndCompressionIsLZMA_ErrorCheckBundleSettings_LogsWarning() : void
    + HandleBundlesNaming_NamesShouldAlwaysBeUnique(bundleBuilds:List<AssetBundleBuild>) : void
    + CreateCatalogFiles_NullArgs_ShouldFail() : void
    + CatalogLocationData_IsNotNull_ForAnyCatalogLocation() : void
    + CreateCatalogFiles_DefaultOptions_ShouldCreateLocalJsonCatalogFile() : void
    + CreateCatalogFiles_BundleLocalCatalog_ShouldCreateLocalCatalogFileInAssetBundle() : void
    + CreateCatalogFiles_BundleLocalCatalog_BuildRemoteCatalog_ShouldCreateCatalogBundleAndRemoteJsonCatalog() : void
}
class ProcessPlayerDataSchemaTests {
    + ProcessPlayerDataSchema_WhenIncludeBuildSettingsScenesIsFalse_ShouldNotGenerateAnySceneLocations() : void
    + ProcessPlayerDataSchema_WhenNoBuildSettingsScenesAreIncluded_ShouldNotGenerateAnySceneLocations() : void
    + ProcessPlayerDataSchema_WhenMultipleBuildSettingsScenesAreIncluded_ShouldGenerateCorrectLocations() : void
    + ProcessPlayerDataSchema_WhenIncludeResourcesFoldersIsFalse_ShouldNotGenerateAnyResourceLocationsOrProviders() : void
    + ProcessPlayerDataSchema_WhenNoResourcesAreIncluded_ShouldNotGenerateAnyResourceLocationsOrProviders() : void
    + ProcessPlayerDataSchema_WhenMultipleResourcesAreIncluded_ShouldGenerateCorrectResourceLocationsAndProviders() : void
}
class PrepGroupBundlePackingTests {
    + CalculateGroupHash_WithGroupGuidMode_GeneratesStableBundleNameWhenEntriesChange() : void
    + CalculateGroupHash_WithGroupGuidProjectIdMode_GeneratesStableBundleNameWhenEntriesChange() : void
    + CalculateGroupHash_WithGroupGuidProjectIdEntryHashMode_GeneratesNewBundleNameWhenEntriesChange() : void
    + GenerateBuildInputDefinition_WithInternalIdModes_GeneratesExpectedAddresses() : void
    + PrepGroupBundlePacking_WhenEntriesDontExpand_AllAssetEntriesAreReturned(mode:BundledAssetGroupSchema.BundlePackingMode) : void
    + PrepGroupBundlePacking_PackSeperate_GroupChangeDoesntAffectOtherAssetsBuildInput() : void
    + PrepGroupBundlePacking_PackTogether_GroupChangeDoesAffectBuildInput() : void
    + PrepGroupBundlePacking_PackTogetherByLabel_GroupChangeDoesAffectBuildInput() : void
}
AddressableAssetTestBase <|-- BuildScriptPackedTests
EditorAddressableAssetsTestFixture <|-- ProcessPlayerDataSchemaTests
EditorAddressableAssetsTestFixture <|-- PrepGroupBundlePackingTests
@enduml
