@startuml
abstract class AbstractTestHostingService {
    + DescriptiveName : string <<get>> <<set>>
    + InstanceId : int <<get>> <<set>>
    + IsHostingServiceRunning : bool <<get>> <<protected set>>
    + <<virtual>> StartHostingService() : void
    + <<virtual>> StopHostingService() : void
    + <<virtual>> CloseHostingService() : void
    + <<virtual>> OnBeforeSerialize(dataStore:KeyDataStore) : void
    + <<virtual>> OnAfterDeserialize(dataStore:KeyDataStore) : void
    + EvaluateProfileString(key:string) : string
    + <<virtual>> OnGUI() : void
}
class "List`1"<T> {
}
class "Dictionary`2"<T1,T2> {
}
IHostingService <|-- AbstractTestHostingService
AbstractTestHostingService --> "HostingServiceContentRoots<string>" "List`1"
AbstractTestHostingService --> "ProfileVariables<string,string>" "Dictionary`2"
AbstractTestHostingService --> "Logger" ILogger
@enduml
