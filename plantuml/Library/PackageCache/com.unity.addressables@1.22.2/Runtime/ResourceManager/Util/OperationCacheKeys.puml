@startuml
interface IOperationCacheKey {
}
class IdCacheKey <<sealed>> {
    + ID : string
    + IdCacheKey(id:string)
    + <<override>> GetHashCode() : int
    + <<override>> Equals(obj:object) : bool
    + Equals(other:IOperationCacheKey) : bool
}
class LocationCacheKey <<sealed>> {
    + LocationCacheKey(location:IResourceLocation, desiredType:Type)
    + <<override>> GetHashCode() : int
    + <<override>> Equals(obj:object) : bool
    + Equals(other:IOperationCacheKey) : bool
}
class DependenciesCacheKey <<sealed>> {
    + DependenciesCacheKey(dependencies:IList<IResourceLocation>, dependenciesHash:int)
    + <<override>> GetHashCode() : int
    + <<override>> Equals(obj:object) : bool
    + Equals(other:IOperationCacheKey) : bool
}
class AsyncOpHandlesCacheKey <<sealed>> {
    + AsyncOpHandlesCacheKey(handles:IList<AsyncOperationHandle>)
    + <<override>> GetHashCode() : int
    + <<override>> Equals(obj:object) : bool
    + Equals(other:IOperationCacheKey) : bool
}
class LocationUtils <<static>> {
    + {static} LocationEquals(loc1:IResourceLocation, loc2:IResourceLocation) : bool
    + {static} DependenciesEqual(deps1:IList<IResourceLocation>, deps2:IList<IResourceLocation>) : bool
}
class "IEquatable`1"<T> {
}
"IEquatable`1" "<IOperationCacheKey>" <|-- IOperationCacheKey
IOperationCacheKey <|-- IdCacheKey
IOperationCacheKey <|-- LocationCacheKey
IOperationCacheKey <|-- DependenciesCacheKey
IOperationCacheKey <|-- AsyncOpHandlesCacheKey
@enduml
