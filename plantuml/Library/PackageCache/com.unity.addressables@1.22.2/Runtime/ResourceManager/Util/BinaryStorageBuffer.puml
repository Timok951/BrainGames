@startuml
class BinaryStorageBuffer {
}
struct "LRUCache`2"<TKey,TValue> {
    + LRUCache(limit:int)
    + TryAdd(id:TKey, obj:TValue) : bool
    + TryGet(offset:TKey, val:TValue) : bool
}
class BuiltinTypesSerializer {
    + Deserialize(reader:Reader, t:Type, offset:uint) : object
    + Serialize(writer:Writer, val:object) : uint
}
class TypeSerializer {
    + Deserialize(reader:Reader, type:Type, offset:uint) : object
    + Serialize(writer:Writer, val:object) : uint
}
struct DynamicString {
    + stringId : uint
    + nextId : uint
}
struct ObjectTypeData {
    + typeId : uint
    + objectId : uint
}
interface ISerializationAdapter {
}
interface "ISerializationAdapter`1"<T> {
}
class Reader <<unsafe>> {
    + AddSerializationAdapter(a:ISerializationAdapter) : void
    + Reader(data:byte[], maxCachedObjects:int, adapters:ISerializationAdapter[])
    + Reader(inputStream:Stream, bufferSize:uint, maxCachedObjects:int, adapters:ISerializationAdapter[])
    + ReadObjectArray(id:uint, cacheValues:bool) : object[]
    + ReadObjectArray(t:Type, id:uint, cacheValues:bool) : object[]
    + ReadObjectArray(id:uint, cacheValues:bool) : T[]
    + ReadObject(id:uint, cacheValue:bool) : object
    + ReadObject(offset:uint, cacheValue:bool) : T
    + ReadObject(t:Type, id:uint, cacheValue:bool) : object
    + ReadValueArray(id:uint, cacheValue:bool) : T[]
    + ReadValue(id:uint) : T
    + ReadString(id:uint, sep:char, cacheValue:bool) : string
}
class Writer <<unsafe>> {
    + Length : uint <<get>>
    + Writer(chunkSize:int, adapters:ISerializationAdapter[])
    + Reserve() : uint
    + Write(val:T) : uint
    + Write(val:T) : uint
    + Write(offset:uint, val:T) : uint
    + Write(offset:uint, val:T) : uint
    + Reserve(count:uint) : uint
    + Write(values:T[], hashElements:bool) : uint
    + Write(offset:uint, values:T[], hashElements:bool) : uint
    + WriteObjects(objs:IEnumerable<T>, serizalizeTypeData:bool) : uint
    + WriteObject(obj:object, serializeTypeData:bool) : uint
    + WriteString(str:string, sep:char) : uint
    + SerializeToByteArray() : byte[]
    + SerializeToStream(str:Stream) : uint
}
class "IEquatable`1"<T> {
}
struct Entry {
    + Equals(other:Entry) : bool
    + <<override>> GetHashCode() : int
}
class "IEnumerable`1"<T> {
}
struct ObjectToStringRemap {
    + stringId : uint
    + separator : char
}
struct Data {
    + assemblyId : uint
    + classId : uint
}
class Chunk {
    + position : uint
}
struct StringParts {
    + str : string
    + dataSize : uint
    + isUnicode : bool
}
class "LinkedListNode`1"<T> {
}
BinaryStorageBuffer +-- BuiltinTypesSerializer
"ISerializationAdapter`1" "<int>" <|-- BuiltinTypesSerializer
"ISerializationAdapter`1" "<bool>" <|-- BuiltinTypesSerializer
"ISerializationAdapter`1" "<long>" <|-- BuiltinTypesSerializer
"ISerializationAdapter`1" "<string>" <|-- BuiltinTypesSerializer
"ISerializationAdapter`1" "<Hash128>" <|-- BuiltinTypesSerializer
BuiltinTypesSerializer --> "Dependencies<ISerializationAdapter>" "IEnumerable`1"
BinaryStorageBuffer +-- TypeSerializer
"ISerializationAdapter`1" "<Type>" <|-- TypeSerializer
TypeSerializer --> "Dependencies<BinaryStorageBuffer.ISerializationAdapter>" "IEnumerable`1"
BinaryStorageBuffer +-- DynamicString
BinaryStorageBuffer +-- ObjectTypeData
BinaryStorageBuffer +-- ISerializationAdapter
BinaryStorageBuffer +-- "ISerializationAdapter`1"
ISerializationAdapter <|-- "ISerializationAdapter`1"
BinaryStorageBuffer +-- Reader
BinaryStorageBuffer +-- Writer
"LRUCache`2" +-- Entry
"IEquatable`1" "<Entry>" <|-- Entry
Entry --> "lruNode<TKey>" "LinkedListNode`1"
Entry --> "Value" TValue
BuiltinTypesSerializer +-- ObjectToStringRemap
TypeSerializer +-- Data
Writer +-- Chunk
Writer +-- StringParts
@enduml
