@startuml
class "AssetReferenceT`1"<TObject> {
    + AssetReferenceT(guid:string)
    + LoadAsset() : AsyncOperationHandle<TObject>
    + <<virtual>> LoadAssetAsync() : AsyncOperationHandle<TObject>
    + <<override>> ValidateAsset(obj:Object) : bool
    + <<override>> ValidateAsset(mainAssetPath:string) : bool
}
class AssetReferenceGameObject {
    + AssetReferenceGameObject(guid:string)
}
class AssetReferenceTexture {
    + AssetReferenceTexture(guid:string)
}
class AssetReferenceTexture2D {
    + AssetReferenceTexture2D(guid:string)
}
class AssetReferenceTexture3D {
    + AssetReferenceTexture3D(guid:string)
}
class AssetReferenceSprite {
    + AssetReferenceSprite(guid:string)
    + <<override>> ValidateAsset(path:string) : bool
}
class AssetReferenceAtlasedSprite {
    + AssetReferenceAtlasedSprite(guid:string)
    + <<override>> ValidateAsset(obj:Object) : bool
    + <<override>> ValidateAsset(path:string) : bool
}
class AssetReference {
    + <<virtual>> RuntimeKey : object <<get>>
    + <<virtual>> AssetGUID : string <<get>>
    + <<virtual>> SubObjectName : string <<get>> <<set>>
    + IsValid() : bool
    + IsDone : bool <<get>>
    + AssetReference()
    + AssetReference(guid:string)
    + <<override>> ToString() : string
    + LoadAsset() : AsyncOperationHandle<TObject>
    + LoadScene() : AsyncOperationHandle<SceneInstance>
    + Instantiate(position:Vector3, rotation:Quaternion, parent:Transform) : AsyncOperationHandle<GameObject>
    + Instantiate(parent:Transform, instantiateInWorldSpace:bool) : AsyncOperationHandle<GameObject>
    + <<virtual>> LoadAssetAsync() : AsyncOperationHandle<TObject>
    + <<virtual>> LoadSceneAsync(loadMode:LoadSceneMode, activateOnLoad:bool, priority:int) : AsyncOperationHandle<SceneInstance>
    + <<virtual>> UnLoadScene() : AsyncOperationHandle<SceneInstance>
    + <<virtual>> InstantiateAsync(position:Vector3, rotation:Quaternion, parent:Transform) : AsyncOperationHandle<GameObject>
    + <<virtual>> InstantiateAsync(parent:Transform, instantiateInWorldSpace:bool) : AsyncOperationHandle<GameObject>
    + <<virtual>> RuntimeKeyIsValid() : bool
    + <<virtual>> ReleaseAsset() : void
    + <<virtual>> ReleaseInstance(obj:GameObject) : void
    + <<virtual>> ValidateAsset(obj:Object) : bool
    + <<virtual>> ValidateAsset(path:string) : bool
}
AssetReference <|-- "AssetReferenceT`1"
"AssetReferenceT`1" "<GameObject>" <|-- AssetReferenceGameObject
"AssetReferenceT`1" "<Texture>" <|-- AssetReferenceTexture
"AssetReferenceT`1" "<Texture2D>" <|-- AssetReferenceTexture2D
"AssetReferenceT`1" "<Texture3D>" <|-- AssetReferenceTexture3D
"AssetReferenceT`1" "<Sprite>" <|-- AssetReferenceSprite
"AssetReferenceT`1" "<Sprite>" <|-- AssetReferenceAtlasedSprite
IKeyEvaluator <|-- AssetReference
AssetReference --> "OperationHandle" AsyncOperationHandle
AssetReference --> "Asset" Object
@enduml
