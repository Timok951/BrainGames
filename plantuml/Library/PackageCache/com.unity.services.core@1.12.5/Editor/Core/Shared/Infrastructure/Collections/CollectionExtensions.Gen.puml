@startuml
class CollectionExtensions <<static>> {
    + {static} Map(collection:ObservableCollection<TFrom>, mapping:Func<TFrom, TTo>) : IReadOnlyObservable<TTo>
    + {static} AsReadonly(collection:ObservableCollection<T>) : IReadOnlyObservable<T>
    + {static} Merge(collections:IEnumerable<IReadOnlyObservable<T>>) : IReadOnlyObservable<T>
    + {static} EnumerateOnce(enumerable:IEnumerable<T>) : IReadOnlyCollection<T>
    + {static} ForEach(enumerable:IEnumerable<T>, action:Action<T>) : void
    + {static} ForEach(enumerable:IEnumerable<T>, func:Func<T, TOut>) : IReadOnlyList<TOut>
}
@enduml
